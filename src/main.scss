@use 'sass:map';

@use 'abstracts' as *;
@use 'defaults' as *;
@use 'base' as *;

@mixin main(
    $colors: $default-color-options,
    $theme: $default-theme,
    $color-setters: $default-color-setters,
    $color-getters: $default-color-getters,
    $flexbox-classnames-map: $default-flexbox-classnames-map,
    $spacing-determinants: $default-spacing-determinants,
    $spacing-setters: $default-spacing-setters,
    $spacing-getters: $default-spacing-getters,
    $breakpoints: $default-breakpoints,
    $layout-classnames-map: $layout-classnames-map,
    $typography-classnames-map: $typography-classnames-map,
    $typography-properties: $typography-sized-properties-and-units,
    $fonts: null
) {
    /* Fonts */
    @include generate-fonts($fonts);

    /* Colors */
    @include set-themed-colors($colors, $theme);

    @include set-colors-with-respective-custom-property(
        $color-setters,
        get-colornames-from-map($colors, $theme)
    );
    @include get-color-for-each-colorname-nuance-getter(
        $color-getters,
        $color-setters
    );

    /* flexbox */
    @include generate-basic-flexbox-options($flexbox-classnames-map);
    @include generate-flex-flow-options;
    @include generate-options-for-overflow-flex-properties;

    /**
        Spacing variables without units
    */
    $spacing-sizes-map: calculate-sizes-from-range($spacing-determinants);
    @include root-spacing-values($spacing-sizes-map);
    @include generate-spacing-setter($spacing-sizes-map, $spacing-setters);

    /* Responsive spacing setters */
    @include generate-spacing-setter(
        $spacing-sizes-map,
        $spacing-setters,
        $breakpoints
    );
    @include generate-spacing-getter($spacing-getters, $spacing-setters);

    /*
        Static Layout classes
    */
    @include generate-static-layout-classes($layout-classnames-map);
    @include generate-responsive-static-layout-classes(
        $layout-classnames-map,
        $breakpoints
    );

    /*
        Static Typography Classes
    */
    @include generate-static-typography-classes($typography-classnames-map);
    @include generate-responsive-static-typography-classes(
        $typography-classnames-map,
        $breakpoints
    );

    /*
        Sized typography classes from range
    */
    @include generate-typography-from-range-of-values(
        $typography-properties,
        $spacing-sizes-map,
        $typography-classnames-map
    );

    @include generate-responsive-typography-from-range-of-values(
        $typography-properties,
        $spacing-sizes-map,
        $typography-classnames-map,
        $breakpoints
    );
}

@include main;
